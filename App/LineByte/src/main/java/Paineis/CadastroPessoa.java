/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Paineis;

import Entidade.DAO;
import Entidade.EntidadesBanco.Endereco;
import Entidade.EntidadesBanco.Pessoa;
import Interfaces.TemplatePainelCadastro;
import Telas.Cadastro;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author r4f4s
 */
public class CadastroPessoa extends TemplatePainelCadastro {
    private boolean check = false;
    /**
     * Creates new form CadastroPessoa
     */
    public CadastroPessoa() {
        initComponents();
        CBendereco.setModel(new DefaultComboBoxModel(DAO.listaNative(Endereco.class).toArray()));
        CBendereco.addItem("novo");// colar no resto dos construtores que possuem combobox
        check = true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LBnome = new javax.swing.JLabel();
        LBsexo = new javax.swing.JLabel();
        LBcpf = new javax.swing.JLabel();
        LBrg = new javax.swing.JLabel();
        LBdataNascimento = new javax.swing.JLabel();
        TFnome = new javax.swing.JTextField();
        TFcpf = new javax.swing.JTextField();
        TFrg = new javax.swing.JTextField();
        FTFdataNascimento = new javax.swing.JFormattedTextField();
        RBsexoMasculino = new javax.swing.JRadioButton();
        RBsexoFeminino = new javax.swing.JRadioButton();
        LBendereco = new javax.swing.JLabel();
        CBendereco = new javax.swing.JComboBox<>();

        LBnome.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        LBnome.setText("Nome:");

        LBsexo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        LBsexo.setText("Sexo:");

        LBcpf.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        LBcpf.setText("CPF:");

        LBrg.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        LBrg.setText("RG:");

        LBdataNascimento.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        LBdataNascimento.setText("Data Nascimento:");

        try {
            FTFdataNascimento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        RBsexoMasculino.setText("Masculino");

        RBsexoFeminino.setText("Feminino");

        LBendereco.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        LBendereco.setText("Endere√ßo:");

        CBendereco.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        CBendereco.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CBenderecoItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(164, 164, 164)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(LBnome)
                            .addGap(18, 18, 18)
                            .addComponent(TFnome, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(LBsexo)
                                .addGap(18, 18, 18)
                                .addComponent(RBsexoMasculino)
                                .addGap(18, 18, 18)
                                .addComponent(RBsexoFeminino))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(LBrg)
                                .addGap(18, 18, 18)
                                .addComponent(TFrg, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(LBendereco)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(CBendereco, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(LBcpf)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(TFcpf, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(LBdataNascimento)
                            .addGap(18, 18, 18)
                            .addComponent(FTFdataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(240, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LBnome)
                    .addComponent(TFnome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LBcpf)
                    .addComponent(TFcpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LBrg)
                    .addComponent(TFrg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LBdataNascimento)
                    .addComponent(LBsexo)
                    .addComponent(FTFdataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RBsexoMasculino)
                    .addComponent(RBsexoFeminino))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LBendereco)
                    .addComponent(CBendereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(205, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void CBenderecoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CBenderecoItemStateChanged
        if("novo".equals(CBendereco.getSelectedItem()+"") && check == true){
            CadastroEndereco CE;
            new Cadastro(null, true, CE = new CadastroEndereco()).setVisible(true);
            CBendereco.setModel(new DefaultComboBoxModel(DAO.listaNative(Endereco.class).toArray()));
            CBendereco.setSelectedItem(CE.getObjeto(null));
            check = false;
            CBendereco.addItem("novo");
            check = true;
        }
    }//GEN-LAST:event_CBenderecoItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CBendereco;
    private javax.swing.JFormattedTextField FTFdataNascimento;
    private javax.swing.JLabel LBcpf;
    private javax.swing.JLabel LBdataNascimento;
    private javax.swing.JLabel LBendereco;
    private javax.swing.JLabel LBnome;
    private javax.swing.JLabel LBrg;
    private javax.swing.JLabel LBsexo;
    private javax.swing.JRadioButton RBsexoFeminino;
    private javax.swing.JRadioButton RBsexoMasculino;
    private javax.swing.JTextField TFcpf;
    private javax.swing.JTextField TFnome;
    private javax.swing.JTextField TFrg;
    // End of variables declaration//GEN-END:variables

    @Override
    public Object getObjeto() {
        Pessoa p = new Pessoa();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        boolean err = false;
        p.setCpf(TFcpf.getText());
        try {
            p.setDataNasc(sdf.parse(FTFdataNascimento.getText()));
        } catch (ParseException ex) {
            Logger.getLogger(CadastroPessoa.class.getName()).log(Level.SEVERE, null, ex);
        }
        p.setEndereco((Endereco) CBendereco.getSelectedItem());
        p.setNome(TFnome.getText());
        p.setRg(TFrg.getText());
        
        if(RBsexoFeminino.isSelected() == true){
            if(RBsexoMasculino.isSelected() == true){
                JOptionPane.showMessageDialog(null, "Marque somente UM sexo!!");
                err = true;
            } else {
                p.setSexo("F");
            }
        } else {
            if(RBsexoMasculino.isSelected() == true){
                p.setSexo("M");
            } else {
                JOptionPane.showMessageDialog(null, "Marque pelo menos UM sexo!!");
                err = true;
            }
        }
        if(err == false) {
            return p;
        } else {
            return null; // em todo lugar que chamar esse m√©todo precisar√° de um verificador para nao salvar um objeto nulo
        }
    }

    @Override
    public Object getObjeto(Object o) {
        Pessoa p;
        if(o == null){
            p = new Pessoa();

        } else {
            p = (Pessoa) o;
        }
        //preenchendo o objeto para salvar, daqui pra baixo voce exclui oq tem e copia tudo do getobjeto() la em cima, tirando
        // a primeira linha q √© a declaracao
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        boolean err = false;
        p.setCpf(TFcpf.getText());
        try {
            p.setDataNasc(sdf.parse(FTFdataNascimento.getText()));
        } catch (ParseException ex) {
            Logger.getLogger(CadastroPessoa.class.getName()).log(Level.SEVERE, null, ex);
        }
        p.setEndereco((Endereco) CBendereco.getSelectedItem());
        p.setNome(TFnome.getText());
        p.setRg(TFrg.getText());
        //verificando os botoes de sexo para marcar pelo menos um e somente uma opcao
        if(RBsexoFeminino.isSelected() == true){
            if(RBsexoMasculino.isSelected() == true){
                JOptionPane.showMessageDialog(null, "Marque somente UM sexo!!");
                err = true;
            } else {
                p.setSexo("F");
            }
        } else {
            if(RBsexoMasculino.isSelected() == true){
                p.setSexo("M");
            } else {
                JOptionPane.showMessageDialog(null, "Marque pelo menos UM sexo!!");
                err = true;
            }
        }
        if(err == false) {
            return p;
        } else {
            return null; // em todo lugar que chamar esse m√©todo precisar√° de um verificador para nao salvar um objeto nulo
        }
    }

    @Override
    public void preencherCampos(Object o) { 
        //aqui √© onde vai preencher os campos da tela como vazios, se tiver clicado em salvar
        //ou com os dados do objeto, se tiver clicado em editar
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy"); // se houver algum campo de data isso √© necessario
        if(o == null){
            //setando os campos como vazio quando tiver clicado em novo la no listagem
            TFrg.setText(""); //isso aq √© padrao pra todos os campos de texto
            TFnome.setText("");
            TFcpf.setText("");
            RBsexoFeminino.setSelected(false); //qualquer RadioButton que colocou fica desselecionado assim
            RBsexoMasculino.setSelected(false);
            FTFdataNascimento.setText(""); // para colocar vazio nao tem problema setar assim
            CBendereco.setSelectedItem(null); // passa nulo no setselecteditem para a combobox aparecer sem nada selecionado
        }else{
            Pessoa p = (Pessoa) o; // declara o objeto
            TFrg.setText(p.getRg()); // setando campo de texto, padrao do padrao
            TFnome.setText(p.getNome());
            TFcpf.setText(p.getCpf());
            FTFdataNascimento.setText(sdf.format(p.getDataNasc())); 
            // aq em cima complica um pouco, como la em cima no getobjeto a gente usou o simpledateformat pra da parse nesse role
            //se vc chamar o tostring aq achando q vai funcionar, nao vai, precisa formatar essa date usando o simpledateformat denovo
            //pq o tostring vai retorna "Sat Nov 11 00:00:00 AMT 1111" ao inv√©s de "11/11/1111" , vai escrever por extenso tudo por isso colocar format
            //mas o jeito de fazer nao mudou e √© s√≥ copiar isso ai e mudar o p.getflinstons ali q da certo
            CBendereco.setSelectedItem(p.getEndereco());
            //isso aq n tava dando certo pq alguem deu uma de mula manca e colocou pra procurar "p"(q √© uma pessoa), ou "o"(q √© um objeto)
            //na maldita combobox de ENDERECO, tem q fazer igual est√° aqui, qualquer outro lugar est√° errado
            if("M".equals(p.getSexo())){  
            //precisa disso quando tem os botoes de sexo, se verificou que nao √© masculino, com certeza vai ser feminino pois ja foi verificado la no getobjeto()
                RBsexoMasculino.setSelected(true);
            } else {
                RBsexoFeminino.setSelected(true);
            }
        }
    }
}